// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  fullname String
  email    String    @unique
  image    String?
  Session  Session[]
  Account  Account?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id           String @id @default(cuid())
  role         Roles  @default(basic)
  passwordHash String
  user         User?  @relation(fields: [userId], references: [id])
  userId       String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @db.Text
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

enum Roles {
  basic
  admin
}

// Business models
model Universite {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Book {
  id           Int              @id @default(autoincrement())
  title        String
  overseer     String?          @default("")
  author       String
  createdAt    DateTime         @default(now())
  creationYear String
  pageCount    Int
  university   Universite       @relation(fields: [universiteId], references: [id])
  universiteId Int
  summary      String           @default("")
  pdfFile      String           @default("")
  pricingModel BookPricingModel @default(Free)
  price        Int
  cycle        Cycle            @relation(fields: [cycleId], references: [id])
  cycleId      Int
  filiere      Filiere          @relation(fields: [filiereId], references: [id])
  filiereId    Int

  downloadUnits downloadUnit[]
  tags String @db.LongText  @default("")
}

model Cycle {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model Filiere {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

model downloadUnit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  payment   payment  @relation(fields: [paymentId], references: [id])
  paymentId Int
}

model payment {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime
  amount        String
  paymentMethod String
  downloadUnits downloadUnit[]
}

model AppSettings {
  id Int @id() @default(autoincrement())

  kkiapaySettings   KkiapaySettings @relation(fields: [kkiapaySettingsId], references: [id])
  kkiapaySettingsId Int             @unique()
}

model KkiapaySettings {
  id         Int    @id() @default(autoincrement())
  publicKey  String
  privateKey String
  secretKey  String

  appSettings AppSettings?
}

enum BookPricingModel {
  Free
  Paid
}
